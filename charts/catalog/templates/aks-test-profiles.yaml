apiVersion: capi.weave.works/v1alpha1
kind: CAPITemplate
metadata:
  name: aks-test-profile
  namespace: default
  annotations:
    #capi.weave.works/profile-0: '{"name": "cert-manager"}'
    #capi.weave.works/profile-1: '{"name": "weave-policy-agent", "editable": true, "version": "0.5.0", "namespace": "policy-system", "values": "policy-agent:\n  config:\n    AGENT_ENABLE_ADMISSION: \"0\"\n  accountId: sademo\n  clusterId: ${CLUSTER_NAME}" }'
spec:
  description: AKS Environment For Profile Testing 
  params:
    - name: CLUSTER_NAME
      description: The name for this cluster.
    - name: REPOSITORY_NAME
      description: The name of the repository used to hold the state for the cluster created by this template.
    - name: REPOSITORY_OWNER
      description: The GitHub handle of the user that owns the repository.
    - name: GITHUB_TOKEN
      description: GitHub Token to insert in secret with access to repo above.

  resourcetemplates:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: "pat-${CLUSTER_NAME}"
        namespace: default
      type: Opaque
      stringData:
        GITHUB_TOKEN: "${GITHUB_TOKEN}"

    - apiVersion: capi.weave.works/v1alpha1
      kind: ClusterBootstrapConfig
      metadata:
        name: bootstrapper-${CLUSTER_NAME}
        namespace: default 
      spec:
        clusterSelector:
          matchLabels:
            weave.works/capi: bootstrap-${CLUSTER_NAME}
        clusterReadinessBackoff: 10s
        jobTemplate:
          generateName: "run-gitops-${CLUSTER_NAME}"
          backoffLimit: 12
          spec:
            containers:
              - image: ghcr.io/fluxcd/flux-cli:v0.33.0
                imagePullPolicy: Always
                name: flux-bootstrap-${CLUSTER_NAME}
                resources: {}
                volumeMounts:
                  - name: kubeconfig
                    mountPath: "/etc/gitops"
                    readOnly: true
                args:
                  [
                    "bootstrap",
                    "github",
                    "--kubeconfig=/etc/gitops/value",
                    "--owner=${REPOSITORY_OWNER}",
                    "--repository=${REPOSITORY_NAME}",
                    "--path=./cluster/default/${CLUSTER_NAME}",
                    "--personal",
                    "--insecure-skip-tls-verify"
                  ]
                envFrom:
                  - secretRef:
                      name: "pat-${CLUSTER_NAME}"
            restartPolicy: Never
            volumes:
              - name: kubeconfig
                secret:
                  secretName: "${CLUSTER_NAME}-kubeconfig"

    - apiVersion: gitops.weave.works/v1alpha1
      kind: GitopsCluster
      metadata:
        name: "${CLUSTER_NAME}"
        namespace: default
        labels:
          weave.works/capi: bootstrap-${CLUSTER_NAME}
      spec:
        capiClusterRef:
          name: "${CLUSTER_NAME}"

    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      metadata:
        labels:
          cni: calico
        name: ${CLUSTER_NAME}
        namespace: default
      spec:
        clusterNetwork:
          pods:
            cidrBlocks:
            - 192.168.0.0/16
        controlPlaneRef:
          apiVersion: controlplane.cluster.x-k8s.io/v1beta1
          kind: KubeadmControlPlane
          name: ${CLUSTER_NAME}-control-plane
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: AzureCluster
          name: ${CLUSTER_NAME}

    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureCluster
      metadata:
        name: ${CLUSTER_NAME}
        namespace: default
      spec:
        identityRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: AzureClusterIdentity
          name: cluster-identity
        location: centralus
        networkSpec:
          subnets:
          - name: control-plane-subnet
            role: control-plane
          - name: node-subnet
            natGateway:
              name: node-natgateway
            role: node
          vnet:
            name: ${CLUSTER_NAME}-vnet
        resourceGroup: developer-platform
        subscriptionID: a1b280f6-5fda-476d-88e9-d39aac2ecbff

    - apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlane
      metadata:
        name: ${CLUSTER_NAME}-control-plane
        namespace: default
      spec:
        kubeadmConfigSpec:
          clusterConfiguration:
            apiServer:
              extraArgs:
                cloud-config: /etc/kubernetes/azure.json
                cloud-provider: azure
              extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
              timeoutForControlPlane: 20m
            controllerManager:
              extraArgs:
                allocate-node-cidrs: "false"
                cloud-config: /etc/kubernetes/azure.json
                cloud-provider: azure
                cluster-name: ${CLUSTER_NAME}
              extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
            etcd:
              local:
                dataDir: /var/lib/etcddisk/etcd
                extraArgs:
                  quota-backend-bytes: "8589934592"
          diskSetup:
            filesystems:
            - device: /dev/disk/azure/scsi1/lun0
              extraOpts:
              - -E
              - lazy_itable_init=1,lazy_journal_init=1
              filesystem: ext4
              label: etcd_disk
            - device: ephemeral0.1
              filesystem: ext4
              label: ephemeral0
              replaceFS: ntfs
            partitions:
            - device: /dev/disk/azure/scsi1/lun0
              layout: true
              overwrite: false
              tableType: gpt
          files:
          - contentFrom:
              secret:
                key: control-plane-azure.json
                name: ${CLUSTER_NAME}-control-plane-azure-json
            owner: root:root
            path: /etc/kubernetes/azure.json
            permissions: "0644"
          initConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                azure-container-registry-config: /etc/kubernetes/azure.json
                cloud-config: /etc/kubernetes/azure.json
                cloud-provider: azure
              name: '{{"{{"}} ds.meta_data["local_hostname"] {{"}}"}}'
          joinConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                azure-container-registry-config: /etc/kubernetes/azure.json
                cloud-config: /etc/kubernetes/azure.json
                cloud-provider: azure
              name: '{{"{{"}} ds.meta_data["local_hostname"] {{"}}"}}'
          mounts:
          - - LABEL=etcd_disk
            - /var/lib/etcddisk
          postKubeadmCommands: []
          preKubeadmCommands: []
        machineTemplate:
          infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: AzureMachineTemplate
            name: ${CLUSTER_NAME}-control-plane
        replicas: 1
        version: v1.25.0

    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      metadata:
        name: ${CLUSTER_NAME}-control-plane
        namespace: default
      spec:
        template:
          spec:
            dataDisks:
            - diskSizeGB: 256
              lun: 0
              nameSuffix: etcddisk
            osDisk:
              diskSizeGB: 128
              osType: Linux
            sshPublicKey: ""
            vmSize: Standard_D2s_v3

    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: MachineDeployment
      metadata:
        name: ${CLUSTER_NAME}-md-0
        namespace: default
      spec:
        clusterName: ${CLUSTER_NAME}
        replicas: 1
        selector:
          matchLabels: null
        template:
          spec:
            bootstrap:
              configRef:
                apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
                kind: KubeadmConfigTemplate
                name: ${CLUSTER_NAME}-md-0
            clusterName: ${CLUSTER_NAME}
            infrastructureRef:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: AzureMachineTemplate
              name: ${CLUSTER_NAME}-md-0
            version: v1.25.0

    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      metadata:
        name: ${CLUSTER_NAME}-md-0
        namespace: default
      spec:
        template:
          spec:
            osDisk:
              diskSizeGB: 128
              osType: Linux
            sshPublicKey: ""
            vmSize: Standard_D2s_v3

    - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
      kind: KubeadmConfigTemplate
      metadata:
        name: ${CLUSTER_NAME}-md-0
        namespace: default
      spec:
        template:
          spec:
            files:
            - contentFrom:
                secret:
                  key: worker-node-azure.json
                  name: ${CLUSTER_NAME}-md-0-azure-json
              owner: root:root
              path: /etc/kubernetes/azure.json
              permissions: "0644"
            joinConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  azure-container-registry-config: /etc/kubernetes/azure.json
                  cloud-config: /etc/kubernetes/azure.json
                  cloud-provider: azure
                name: '{{"{{"}} ds.meta_data["local_hostname"] {{"}}"}}'
            preKubeadmCommands: []

    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureClusterIdentity
      metadata:
        labels:
          clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
        name: cluster-identity
        namespace: default
      spec:
        allowedNamespaces: {}
        clientID: 8431f743-441a-45b6-928d-3f74e63dcc18
        clientSecret:
          name: cluster-identity-secret
          namespace: default
        tenantID: 3747a928-2079-440f-8f0f-ab1be2a7c058
        type: ServicePrincipal
